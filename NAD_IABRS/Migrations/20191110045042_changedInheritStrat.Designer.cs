// <auto-generated />
using System;
using Ef6CoreForPosgreSQL.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace NAD_IABRS.Migrations
{
    [DbContext(typeof(MyWebApiContext))]
    [Migration("20191110045042_changedInheritStrat")]
    partial class changedInheritStrat
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("NAD_IABRS.Models.Author", b =>
                {
                    b.Property<int>("authorId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("bio");

                    b.Property<int>("personId");

                    b.HasKey("authorId");

                    b.HasIndex("personId");

                    b.ToTable("authors");
                });

            modelBuilder.Entity("NAD_IABRS.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("authorId");

                    b.Property<int>("isbn");

                    b.Property<string>("title")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("authorId");

                    b.ToTable("books");
                });

            modelBuilder.Entity("NAD_IABRS.Models.BookCourse", b =>
                {
                    b.Property<int>("BookId");

                    b.Property<int>("CouseId");

                    b.Property<int>("CourseId");

                    b.HasKey("BookId", "CouseId");

                    b.HasIndex("CourseId");

                    b.ToTable("bookCourses");
                });

            modelBuilder.Entity("NAD_IABRS.Models.BookTag", b =>
                {
                    b.Property<int>("BookId");

                    b.Property<int>("TagId");

                    b.HasKey("BookId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("bookTags");
                });

            modelBuilder.Entity("NAD_IABRS.Models.BookUser", b =>
                {
                    b.Property<int>("BookId");

                    b.Property<int>("UserId");

                    b.HasKey("BookId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("bookUsers");
                });

            modelBuilder.Entity("NAD_IABRS.Models.CourseUser", b =>
                {
                    b.Property<int>("CouseId");

                    b.Property<int>("UserId");

                    b.Property<int?>("CourseId");

                    b.HasKey("CouseId", "UserId");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserId");

                    b.ToTable("courseUsers");
                });

            modelBuilder.Entity("NAD_IABRS.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("fName")
                        .IsRequired();

                    b.Property<string>("lName")
                        .IsRequired();

                    b.Property<string>("mName");

                    b.HasKey("Id");

                    b.ToTable("person");
                });

            modelBuilder.Entity("NAD_IABRS.Models.Tag", b =>
                {
                    b.Property<int>("tagName")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("description")
                        .IsRequired();

                    b.HasKey("tagName");

                    b.ToTable("tags");
                });

            modelBuilder.Entity("NAD_IABRS.Models.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("personId");

                    b.HasKey("userId");

                    b.HasIndex("personId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("NAD_IABRS.Models.YCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("endDate")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("startDate")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("courses");
                });

            modelBuilder.Entity("NAD_IABRS.Models.Author", b =>
                {
                    b.HasOne("NAD_IABRS.Models.Person", "person")
                        .WithMany()
                        .HasForeignKey("personId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NAD_IABRS.Models.Book", b =>
                {
                    b.HasOne("NAD_IABRS.Models.Author", "author")
                        .WithMany()
                        .HasForeignKey("authorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NAD_IABRS.Models.BookCourse", b =>
                {
                    b.HasOne("NAD_IABRS.Models.Book", "Book")
                        .WithMany("bookCourses")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NAD_IABRS.Models.YCourse", "Course")
                        .WithMany("bookCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NAD_IABRS.Models.BookTag", b =>
                {
                    b.HasOne("NAD_IABRS.Models.Book", "Book")
                        .WithMany("bookTags")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NAD_IABRS.Models.Tag", "Tag")
                        .WithMany("booksTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NAD_IABRS.Models.BookUser", b =>
                {
                    b.HasOne("NAD_IABRS.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NAD_IABRS.Models.User", "User")
                        .WithMany("bookUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NAD_IABRS.Models.CourseUser", b =>
                {
                    b.HasOne("NAD_IABRS.Models.YCourse", "Course")
                        .WithMany("courseUsers")
                        .HasForeignKey("CourseId");

                    b.HasOne("NAD_IABRS.Models.User", "User")
                        .WithMany("courseUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NAD_IABRS.Models.User", b =>
                {
                    b.HasOne("NAD_IABRS.Models.Person", "person")
                        .WithMany()
                        .HasForeignKey("personId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
